
@using PostaFlya.Models.Location
@model PostaFlya.Models.Flier.FlierCreateModel

@*<script language="javascript" type="text/javascript">*@
@**@
@**@
@*    // example of how to add new rule*@
@*    *@
@*//    $.validator.addMethod('hiddenrequiredrule', function (value, element, param) {*@
@*//        alert(value);*@
@*//        return false;*@
@*//    });*@
@*    $.validator.unobtrusive.adapters.addBool('requiredwithmsg', 'required');  *@
@*</script>*@

<div class="cost-container">
    <a data-bind="click:showCostBreakdown" class="flier-cost-summary">Flier Cost <span data-bind="text:totalCost"></span> </a>
    <ul class="cost-breakdown" data-bind="visible:costBreakdown, foreach:flierCosts">
        <li data-bind="visible:credits() > 0">
            <span data-bind="text:title"></span>:
            <span data-bind="text:credits"></span>
            <div class="cost-description" data-bind="text:description"></div>
        </li>
    </ul>
</div>


<div id="flierCreateStep"  data-bind="template: { name: stepTemplate}">
</div>

<div id="form-buttons">
    <a id="flya-create-back" data-bind="click: prevTemplate, visible:isPrevStep() && stepTemplate() != 'Complete-template'" class="std-btn std-image-btn">
        <span class="std-image-btn-icon"></span>
        <span>BACK</span>
    </a>
    <a id="flya-create-continue" data-bind="click: nextTemplate, visible:isNextStep() && stepTemplate() != 'Summary-template'" class="std-btn std-image-btn">
        <span class="std-image-btn-icon"></span>
        <span>CONTINUE</span>
    </a>

    <a id="flya-create-save" data-bind="click: save, visible:!isUpdate() && stepTemplate() == 'Summary-template', css: { 'btn-std-inuse': posting() == true }" class="std-btn std-image-btn">
        <span class="std-image-btn-icon"></span>
        <span data-bind="text: saveText"></span>
    </a>
    <a id="flya-create-update" data-bind="click: update, visible:isUpdate() && stepTemplate() == 'Summary-template', css: { 'btn-std-inuse': posting() == true }" class="std-btn std-image-btn">
        <span class="std-image-btn-icon"></span>
        <span data-bind="text: updateText"></span>
    </a>
    
    <a id="flya-create-complete" data-bind="click: finish, visible:!isUpdate() && stepTemplate() == 'Complete-template', css: { 'btn-std-inuse': posting() == true }" class="std-btn std-image-btn">
        <span class="std-image-btn-icon"></span>
        <span>Finish</span>
    </a>
</div>

<script type="text/html" id="AddImages-template">
    <form id="flierForm" class="" data-bind="validate: true">
        @Html.ValidationSummary(true)
        @Html.HiddenFor(model => model.Id, new { data_bind = "value:Id" })
        <fieldset>
            <legend>ADD IMAGE TO YOUR FLYER</legend>
            <h2>ADD IMAGE TO YOUR FLYER</h2>
            
            @Html.HiddenFor(model => model.FlierImageId, new { data_bind = "value:FlierImageId" })
            @Html.ValidationMessageFor(model => model.FlierImageId)
            <span class="" data-bind="with:imageSelector">
                @Html.Partial("Image/ImageSelector")
            </span>
        </fieldset>
    </form>
</script>

@Html.Partial("Image/ImageListTemplate")

<script type="text/html" id="Images-template">
    <form id="flierForm" class="" data-bind="validate: true">
        <h2>Add images to your flier</h2>

    <ul class="flier-images" data-bind="foreach:ImageList">
        <li>
            <img data-bind="attr:{src: ImageUrl}"/>
        </li>
    </ul>

    <fieldset>
        <legend>Add images to your flier</legend>
        
        <ol>
            <li data-bind="with:imageSelector">
                @Html.Partial("Image/ImageSelector")
            </li>            
        </ol>
        
    </fieldset>
    </form>

</script>

<script type="text/html" id="Summary-template">
    <form id="flierForm" class="" data-bind="validate: true">
        <fieldset>

            <legend>Summary</legend>
            <h2>Flyer Cost Summary</h2>
            <ul class="flier-cost-summary-full" data-bind="foreach:flierCosts">
                <li data-bind="visible:credits() > 0">
                    <h3 data-bind="text:title"></h3>
                    <div>
                        <span data-bind="text:credits"></span> Popscenes Credits
                    </div>
                    <span class="flier-cost-desc" data-bind="text:description"></span>
                </li>
            </ul>

            <h3>Total Cost</h3>
            <p>
                Total = <span data-bind="text: totalCost"></span> Popscenes Credits
                <span data-bind="visible: TotalPaid()">
                    ( Cost <span data-bind="text:featureCostFmt"></span> -  Paid <span data-bind="text:TotalPaid"></span>)
                </span>
            </p>
        </fieldset>
    </form>
</script>
<script type="text/html" id="Complete-template">
    <form id="flierForm" class="" data-bind="validate: true">
        <fieldset>
            <legend>Flyer Done</legend>
            <h2>Awesome! Flyer Created!</h2>
            <h3>Status: <span data-bind="text:flierStatus"></span></h3>
            
            <span data-bind="visible: flierStatus() == 'PaymentPending'">
                <p>Congratulations on creating your Flyer</p>
                <p>Unfortunetly you do not have enough credits to activate this Flyer.</p>
                <p>You will now be taken to the pending flyers screen where you will be able to add credits to your account and activate this Flyer</p>
            </span>
            
            <span data-bind="visible: flierStatus() != 'PaymentPending'">
                <p>Congratulations on creating your Flyer</p>
                <p>Don’t forget to check out the print options available on your flyer. This will add tear offs and a handy QR code that will link right back to your online Flyer!</p>
                <p>Happy Posting!</p>
            </span>
	</fieldset>
    </form>
</script>
<script type="text/html" id="PostLocation-template">
    <form id="flierForm" class="" data-bind="validate: true">
        
        @Html.ValidationSummary(true)
        @Html.HiddenFor(model => model.Id, new { data_bind = "value:Id" })
        <fieldset>
            <legend>Add a location</legend>
            <div class="">
                <h2>Post your Flyer to an Area</h2>
                          
                <h3>ENTER THE LOCATION BELOW</h3>
                
                @Html.HiddenFor(model => model.Location, new { data_bind = "value: Location().ValidLocationForValidation()" })
                @Html.ValidationMessageFor(model => model.Location)
                                
                @{
                    ViewBag.MapId = "fliermap";
                    ViewBag.DistanceVariable = "PostRadius";
                    ViewBag.LocationVariable = "Location";
                    ViewBag.AutoCompleteLocationBannerText = "'Post to a Suburb or Location'";
                    ViewBag.AutoCompleteLocationId = "locationSearchCreateFlier";
                    ViewBag.VisibleTrigger = null;
                }
                @Html.Partial("Location/LocationAndDistanceSelector")
            </div>
        </fieldset>
    </form>

</script>

<script type="text/html" id="DetailsAndTags-template">
    <form id="flierForm" class="" data-bind="validate: true">
    
        @Html.ValidationSummary(true)
        @Html.HiddenFor(model => model.Id, new { data_bind = "value:Id" })
        <fieldset>
            <legend>ADD DETAILS TO YOUR FLYER</legend>
            <h2>ADD DETAILS TO YOUR FLYER</h2>

            <div class="form-component">
                <h3>Title</h3>
                @Html.ValidationMessageFor(model => model.Title)
                @Html.TextBoxFor(model => model.Title, new { data_bind = "value:Title" })
                

                <h3>Description</h3>
                @Html.ValidationMessageFor(model => model.Description)
                @Html.TextAreaFor(model => model.Description, new { data_bind = "value:Description" })
                
                        
               
            

            </div>
            <div class="form-component">
                <h3>Date</h3>
                @Html.ValidationMessageFor(model => model.EffectiveDate)

                @Html.HiddenFor(model => model.EffectiveDate, new { data_bind = "value:EffectiveDate" })            
                <div id="flyaDate" data-bind="datePicker:{altField: '#EffectiveDate'}, value:EffectiveDate"></div>
                
                @*                @Html.HiddenFor(model => model.EffectiveDate, new { data_bind = "value:EffectiveDate" })*@
                @*                <div id="flyaDate" data-bind="jqueryui: { widget: 'datetimepicker', *@
                @*                            options: { altField: '#EffectiveDate', altFieldTimeOnly: false,*@
                @*                                       useLocalTimezone: true, showButtonPanel: false } }, *@
                @*                                            dateTimePickerUpdate:EffectiveDate"></div>*@
                
                
            </div>
        </fieldset>
        <fieldset>
            <h3>Venue</h3>
            <ol>
                <li data-bind="with:ContactDetails">
                    @Html.ValidationMessageFor(model => model.ContactDetails.Address)
                    @Html.HiddenFor(model => model.ContactDetails.Address, new { data_bind = "value: Address().PlaceName()" })
                    @{ 
                        ViewBag.AutoCompleteLocationBannerText = "'Venue or Address of event'";
                    }
                    @{
                   
                        ViewBag.LocationVariable = "Address";
                        if (string.IsNullOrWhiteSpace(ViewBag.AutoCompleteLocationBannerText))
                        {
                            ViewBag.AutoCompleteLocationBannerText = "'Venue Address'"; 
                        }                    
                        ViewBag.AutoCompleteLocationId = "addressSearch";
                        ViewBag.AutoCompleteBinding = "placeAutoComplete";
                    }
                    @Html.Partial("Location/LocationAutocomplete")
                </li>
                </ol>
            </fieldset>
          <fieldset>
            <legend>Now add some flyer tags</legend>
            <ol>
                <li data-bind="with:tagsSelector">
                    <h3>Choose Scene For Your Flyer</h3>
                    @Html.ValidationMessageFor(model => model.TagsString)
                    @Html.HiddenFor(model => model.TagsString, new { data_bind = "value:SelectedTags()" })
                
                    @Html.Partial("Tags/TagsSelector")
                </li>
            </ol>        
        </fieldset>
    </form>
</script>


<script type="text/html" id="AttachContactDetails-template">
    <form id="flierForm" class="" data-bind="validate: true">
    
        @Html.HiddenFor(model => model.Id, new { data_bind = "value:Id" })
        
        <fieldset>
            
            <legend>Contact Details</legend>
            <h2>Event Contact Details</h2>
            <p>These Details Will Be Sent To Users Who Peel Off Your Flyer</p>
            <ol>
                <li data-bind="with:ContactDetails">
                    @Html.Partial("Contact/EventContactDetailsPartial",(Model != null && Model.ContactDetails !=  null) ? Model.ContactDetails : new FlyerContactDetailsModel())
                </li>
            </ol> 

        </fieldset>
        <fieldset class="analytics-edit">
            <legend>Flyer Features</legend>
            <h2>Advanced Flyer Features</h2>
           
            <ol>
                <li>
                    @Html.ValidationMessageFor(model => model.EnableAnalytics)
                    @Html.CheckBoxFor(model => model.EnableAnalytics, new { data_bind = "checked: EnableAnalytics" }) 
                    @Html.LabelFor(model => model.EnableAnalytics)
                </li>
            </ol>  

        </fieldset>
        <fieldset>
            <legend>Validation</legend>       
            <ol>
                <li>
                    @Html.ValidationSummary()
                </li>
            </ol>  
        </fieldset>        
    </form>
</script>
