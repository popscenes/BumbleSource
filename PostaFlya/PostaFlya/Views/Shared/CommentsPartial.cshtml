
@using PostaFlya.Models.Comments

@{IEnumerable<CommentModel> comments = ViewBag.Template != null && ViewBag.Template ? new List<CommentModel>() { CommentModel.DefaultForTemplate() } : (ViewBag.Comments ?? new List<CommentModel>());}

@Html.Partial("State/PageStateAdd", "Comments")
<div class="comments" data-bind="with:comments">
    <div data-bind="foreach:List">
        @foreach (CommentModel comment in comments)
        {
            <div>
                @Html.DisplayFor(m => comment.Browser, "BrowserAvatar")

                <div>
                    @Html.DisplayFor(m => comment.Browser, "BrowserNameLink")
                    <p data-bind="text:Comment">
                        @comment.Comment
                    </p>
                    <span data-bind="dateString: CommentTime">
                        @comment.CommentTime
                    </span>
                </div>
            </div>
        }
    </div>
    <div data-bind="visible: bf.currentBrowserInstance.IsParticipant()">
        <form id="addcomment" data-bind="submit: addComment"> @*todo add progressive enhancement with form target*@
            <input data-bind='value: commentToAdd, valueUpdate: "afterkeydown"' />
            <button type="submit" data-bind="enable: commentToAdd().length > 0">Add Comment</button>
        </form>
    </div>
</div>